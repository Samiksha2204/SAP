*&---------------------------------------------------------------------*
*& Report  Z15PROG13
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z15PROG13.
DATA  : STRING1 TYPE CHAR50 VALUE 'HELLO',
        STRING2 TYPE CHAR50 VALUE 'ABAP',
        STRING3 TYPE CHAR50 VALUE 'DEVELOPER',
        STRING4 TYPE CHAR100,
        GV_LIST TYPE STRING VALUE 'SNB01,MS.,SAMIKSHA,BHALERAO,SAP,7498535388',
        GT_LIST TYPE TABLE OF STRING,
        GS_LIST LIKE LINE OF GT_LIST,
        GV_DEL TYPE CHAR1 VALUE ',',
        GV_ORG TYPE STRING VALUE '    SAP    ABAP PROGRAMMING - ABAP ON HANA',
        GV_SUB1 TYPE STRING,
        GV_SUB2 TYPE STRING,
        GV_LEN TYPE I,
        GV_AMOUNT TYPE DMBTR VALUE '1500.50',
        GV_TEXT_AMOUNT(20).

WRITE GV_AMOUNT TO GV_TEXT_AMOUNT. "ASSIGNING THE VALUE
WRITE :/ GV_AMOUNT.
WRITE :/ GV_TEXT_AMOUNT.
CONDENSE GV_TEXT_AMOUNT.
WRITE :/ GV_TEXT_AMOUNT.
ULINE.

CONDENSE GV_ORG.
WRITE :/ GV_ORG.
SHIFT GV_ORG BY 3 PLACES LEFT. "TO REMOVE CHARACTER STRING
WRITE :/ GV_ORG.
ULINE.

FIND 'ABAP' IN GV_ORG MATCH COUNT GV_LEN.  "SYSTEM WILL ONLY CHECK FIRST OCCURANCE OF THE WORD.
WRITE :/ GV_LEN.
ULINE.

FIND ALL OCCURRENCES OF 'ABAP' IN GV_ORG MATCH COUNT GV_LEN.  "SYSTEM WILL CHECK ALL OCCURANCES OF THE WORD.
WRITE :/ GV_LEN.
ULINE.

REPLACE 'ABAP' IN GV_ORG WITH 'ABAP ON HANA'.
WRITE :/ GV_ORG.
ULINE.

"uppercase and lowercase
TRANSLATE GV_ORG TO LOWER CASE.
WRITE :/ GV_ORG.
ULINE.

TRANSLATE GV_ORG TO UPPER CASE.
WRITE :/ GV_ORG.
ULINE.

WRITE :/ 'ORIGINAL STRING: ',GV_ORG.
gv_sub1 = gv_org+0(3). "to print first three characters
WRITE :/ 'SUB STRING 1 ->',GV_SUB1.
ULINE.

gv_sub2 = gv_org+9(11). "to print first three characters
WRITE :/ 'SUB STRING 2 ->',GV_SUB2.
ULINE.

"DISPLAYING THE STRING IN A TABLE FORMAT.
SPLIT GV_LIST AT GV_DEL INTO TABLE GT_LIST.
LOOP AT GT_LIST INTO GS_LIST.
  WRITE:/ GS_LIST.
  CLEAR : GS_LIST.
ENDLOOP.
ULINE.

"LENGTH OF THE STRING
WRITE :/ GV_ORG.
GV_LEN = STRLEN( GV_ORG ).
WRITE :/ 'THE LENGTH OF THE STRING IS:',GV_LEN.
ULINE.

WRITE :/ 'ORIGINAL STRING: ',GV_ORG.
CONDENSE GV_ORG. "TO ADD PROPER SPACING BETWEEN WORDS
WRITE :/ 'ORIGINAL STRING AFTER CONDENSE: ',GV_ORG.